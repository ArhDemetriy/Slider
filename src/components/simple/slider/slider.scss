.slider{
  --rowWidth: 512px;
  --barSize: 10px;
  --barPosition: 0;
  --barPositionText: '0%';

  --min: 0;
  --max: 108;
  --count: 7;

  position: relative;

  height: var(--barSize);
  display: flex;
  flex-direction: column;
  align-items: center;

  width: 600px;
  min-height: 60px;
  margin: 30px 0;
  &__row{
    background:
      linear-gradient(to right,
        skyblue calc( var(--barPosition, 0) * 1% ),
        blue calc( var(--barPosition, 0) * 1% ),
        blue 66%,
        skyblue 66%);

    box-sizing: border-box;
    height: 5px;
    width: 100%;
    border-radius: 50vh;
    border: solid 1px red;

    display: flex;
    align-items: center;
  }
  &__bar{
    position: relative;
    left: calc( var(--barPosition)*1% - var(--barSize)/2 );

    box-sizing: border-box;
    height: var(--barSize);
    width: var(--barSize);
    border: 2px wheat solid;
    background-color: darkorchid;
    border-radius: 50vh;

    &:hover, &:focus, &-moving{
      &::before{
        content: var(--barPositionText);
        position: absolute;
        top: 3rem;
      }
    }
  }
  &__scale{
    width: 100%;
    margin-bottom: 10px;

    display: flex;
    justify-content: space-between;
    &-numeric{
      counter-reset: mark calc(var(--min));
      --step: calc( (var(--max) - var(--min)) / calc(var(--count, 2) - 1));
    }
  }
  &__mark{
    position: relative;
    &::before{
      position: absolute;
      bottom: 0;
      content: attr(data-content);
    }
    &::after{
      position: absolute;
      top: 0;
      background-color: yellowgreen;
      width: 1px;
      height: 4px;
      content: '';
    }
    &-start{
      &::before{
        left: 0;
      }
      &_numeric::before{
        counter-reset: start_mark var(--min);
        content: counter(start_mark);
      }
    }
    &-middle{
      &::before{
        transform: translateX(-50%);
      }
      &_numeric::before{
        counter-increment: mark var(--step);
        content: counter(mark);
      }
    }
    &-end{
      &::before{
        right: 0;
      }
      &_numeric::before{
        counter-reset: end_mark var(--max);
        content: counter(end_mark);
      }
    }
  }
}
